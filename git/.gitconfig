[pretty]
  lg = %C(red)%h%C(reset) %C(green)%ci%C(reset) %s %C(bold blue)-- %an%C(reset)%C(yellow)%d%C(reset)
  lge = %C(red)%h%C(reset) %C(green)%ci%C(reset) %s %C(bold blue)-- %an <%ae>%C(reset)%C(yellow)%d%C(reset)
  reflog = %C(red)%h%C(reset) %C(green)%ci%C(reset) %s %C(bold blue)-- %an%C(reset) %C(yellow)(%gd)%C(reset)
[alias]
  lg = log --pretty=lg
  glg = log --graph --pretty=lg
  slg = stash list --pretty=reflg
  blg = branch --format '%(color:red)%(objectname:short)%(color:reset) %(color:green)%(committerdate:iso)%(color:reset) %(subject) %(color:bold blue)-- %(authorname)%(color:reset) %(color:yellow)(%(refname:short))%(color:reset)'
  up = "!git remote update -p; git merge --ff-only @{u}"
  aliases = "!open https://gist.github.com/robmiller/6018582"

  branch-name = "!git rev-parse --abbrev-ref HEAD"
  open-branch = "!hub browse -- tree/$(git branch-name)"
  publish = "!git push --set-upstream origin origin $(git branch-name)"
  unpublish = "!git push origin :$(git branch-name)"
  rebase-remote-master = "!git fetch origin master && git rebase origin/master"

  rebase-branch = "!git rebase -i `git merge-base master HEAD`"


  # Unstage any files that have been added to the staging area
  unstage = reset HEAD
  # Show changes that have been staged
  staged = diff --cached

  # Mark a file as "assume unchanged", which means that Git will treat it
  # as though there are no changes to it even if there are. Useful for
  # temporary changes to tracked files
  assume = update-index --assume-unchanged
  # Reverse the above
  unassume = update-index --no-assume-unchanged
  # Show the files that are currently assume-unchanged
  assumed = "!git ls-files -v | grep ^h | cut -c 3-"
  # Checkout our version of a file and add it
  ours = "!f() { git checkout --ours $@ && git add $@; }; f"
  # Checkout their version of a file and add it
  theirs = "!f() { git checkout --theirs $@ && git add $@; }; f"

  # Delete any branches that have been merged into master
  # See also: https://gist.github.com/robmiller/5133264
  delete-merged-branches = "!git co master && git branch --merged | grep -v '\\*' | xargs -n 1 git branch -d"
[pull]
  ff = only
[color]
  ui = true
[color "diff-highlight"]
  oldNormal = red bold
  oldHighlight = red bold 52
  newNormal = green bold
  newHighlight = green bold 22
[color "diff"]
  meta = yellow
  frag = magenta bold
  commit = yellow bold
  old = red bold
  new = green bold
  whitespace = red reverse
[push]
  default = current
[rerere]
  enabled = true
[core]
  precomposeunicode = true
  excludesfile = ~/.gitignore_global
  sparseCheckout = true
  pager = diff-so-fancy | less --tabs=4 -RFX
[filter "lfs"]
  clean = git-lfs clean -- %f
  smudge = git-lfs smudge -- %f
  process = git-lfs filter-process
  required = true
[commit]
  gpgsign = true
  template = ~/.stCommitMsg
[include]
  path = ~/.gitconfig.local
